{"version":3,"sources":["reportWebVitals.ts","Components/LoaderSpinner.tsx","Routes/RoutesConfig.ts","Pages/Hero.tsx","Pages/About.tsx","Pages/Blogs.tsx","Components/NavigationBar.tsx","Containers/Layout.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LoaderSpinner","type","color","height","width","timeout","Routes","name","path","component","useState","isDesktop","setIsDesktop","isMobile","setIsMobile","useEffect","window","innerWidth","id","className","Container","left","bottom","duration","delay","distance","to","alt","src","CollapseStyled","styled","Collapse","NavItemStyled","NavItem","NavbarStyled","Navbar","NavStyled","Nav","NavigationBar","props","isOpen","setIsOpen","light","expand","NavbarToggler","onClick","navbar","Layout","children","ReactDOM","render","StrictMode","Suspense","fallback","map","route","index","exact","from","document","getElementById"],"mappings":"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","file":"static/js/main.4d82ee70.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nconst LoaderSpinner: React.FC = () => {\n  return (\n    <Loader\n      type=\"BallTriangle\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={100000} //3 secs\n    />\n  );\n};\n\nexport default LoaderSpinner;\n","import Hero from \"../Pages/Hero\";\nimport Blogs from \"../Pages/Blogs\";\nimport About from \"../Pages/About\";\n\ninterface Route {\n    name: string;\n    path: string;\n    component: React.FC;\n}\n\nconst Routes: Route[] = [\n    {\n        name: \"Hero\",\n        path: \"/hero\",\n        component: Hero\n    },\n    {\n        name: \"About\",\n        path: \"/about\",\n        component: About\n    },\n    {\n        name: \"Blogs\",\n        path: \"/blogs\",\n        component: Blogs\n    }\n]\n\nexport default Routes;","import React, { useEffect, useState } from \"react\";\n// @ts-ignore\nimport Fade from \"react-reveal/Fade\";\nimport { Container } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst Hero: React.FC<{}> = () => {\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section id=\"hero\" className=\"jumbotron\">\n      <Container>\n        <Fade\n          left={isDesktop}\n          bottom={isMobile}\n          duration={1000}\n          delay={500}\n          distance=\"30px\"\n        >\n          <h1 className=\"hero-title\">\n            Hi, my name is{\" \"}\n            <span className=\"text-color-main\">Ibrahim Megahed</span>\n          </h1>\n          <h1 className=\"hero-title\">\n            I'm a full-stack software engineer crafting web an mobile apps.\n          </h1>\n        </Fade>\n        <Fade\n          left={isDesktop}\n          bottom={isMobile}\n          duration={1000}\n          delay={1000}\n          distance=\"30px\"\n        >\n          <p className=\"hero-cta\">\n            <span className=\"cta-btn cta-btn--hero\">\n              <Link to=\"/about\">Know more</Link>\n            </span>\n          </p>\n        </Fade>\n      </Container>\n    </section>\n  );\n};\n\nexport default Hero;\n","import React, { useEffect, useState } from \"react\";\n// @ts-ignore\nimport Fade from \"react-reveal/Fade\";\n\nconst About: React.FC<{}> = () => {\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section id=\"about\">\n      <Fade\n        left={isDesktop}\n        bottom={isMobile}\n        duration={1000}\n        delay={500}\n        distance=\"30px\"\n      >\n        <h1 className=\"title\">\n          Welcome to My Personal Website{\" \"}\n          <img\n            alt=\"\"\n            src=\"https://media.giphy.com/media/hvRJCLFzcasrR4ia7z/giphy.gif\"\n          ></img>\n        </h1>\n      </Fade>\n      <Fade\n        left={isDesktop}\n        bottom={isMobile}\n        duration={1000}\n        delay={1000}\n        distance=\"30px\"\n      >\n        <div className=\"avatar-container\">\n          {/* TODO: change avatar image to graduation one while discussing the gp*/}\n          <img\n            className=\"avatar\"\n            src=\"https://scontent.fcai19-1.fna.fbcdn.net/v/t1.0-9/36304203_1133092436830202_6267488759638392832_o.jpg?_nc_cat=104&ccb=1-3&_nc_sid=ad2b24&_nc_ohc=mbcGhodgiPAAX--k4RX&_nc_ht=scontent.fcai19-1.fna&oh=966564ddb664974c8c3ec0e62ab68c1e&oe=60806E61\"\n            alt=\"\"\n          />\n          <p>\n            That's me, presenting my Quran Surah Identifier graduation project 3\n            years ago\n          </p>\n        </div>\n      </Fade>\n    </section>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst Blogs: React.FC<{}> = () => {\n  return <h1>Blogs</h1>;\n};\n\nexport default Blogs;\n","import React, { useState } from \"react\";\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst CollapseStyled = styled(Collapse)`\n  justify-content: flex-end;\n`;\n\nconst NavItemStyled = styled(NavItem)`\n  padding: 0 1vw 0 1vw;\n\n  @media only screen and (max-width: 767px) {\n    padding: 1vw 0 1vw 0;\n  }\n`;\n\nconst NavbarStyled = styled(Navbar)`\n  background-color: white !important;\n`;\n\nconst NavStyled = styled(Nav)`\n  padding-right: 10vw;\n`;\n\nconst NavigationBar: React.FC = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <NavbarStyled color=\"light\" light expand=\"md\">\n      <NavbarToggler onClick={toggle} />\n      <CollapseStyled isOpen={isOpen} navbar>\n        <NavStyled className=\"me-auto\" navbar>\n          <NavItemStyled>\n            <NavLink to=\"/hero\">Hero</NavLink>\n          </NavItemStyled>\n          <NavItemStyled>\n            <NavLink to=\"/about\">About</NavLink>\n          </NavItemStyled>\n          <NavItemStyled>\n            <NavLink to=\"/blogs\">Blogs</NavLink>\n          </NavItemStyled>\n        </NavStyled>\n      </CollapseStyled>\n    </NavbarStyled>\n  );\n};\n\nexport default NavigationBar;\n","import React from \"react\";\nimport NavigationBar from \"../Components/NavigationBar\";\n\nconst Layout: React.FC = (props) => {\n  return (\n    <>\n      <NavigationBar />\n      {props.children}\n    </>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport LoaderSpinner from \"./Components/LoaderSpinner\";\nimport Routes from \"./Routes/RoutesConfig\";\nimport Layout from \"./Containers/Layout\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <React.Suspense fallback={LoaderSpinner}>\n      <HashRouter>\n        <Layout>\n          <Switch>\n            {Routes.map((route, index) => {\n              return (\n                <Route\n                  key={route.name}\n                  exact\n                  path={route.path}\n                  component={route.component}\n                />\n              );\n            })}\n            <Redirect from=\"/\" to=\"/hero\" />\n          </Switch>\n        </Layout>\n      </HashRouter>\n    </React.Suspense>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}