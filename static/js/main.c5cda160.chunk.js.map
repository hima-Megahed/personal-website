{"version":3,"sources":["reportWebVitals.ts","Components/LoaderSpinner.tsx","Routes/RoutesConfig.ts","Pages/Home.tsx","Pages/About.tsx","Pages/Blogs.tsx","Components/NavigationBar.tsx","Containers/Layout.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LoaderSpinner","type","color","height","width","timeout","Routes","name","path","component","Button","NavBarBrandStyled","styled","NavbarBrand","CollapseStyled","Collapse","NavItemStyled","NavItem","NavbarStyled","Navbar","NavStyled","Nav","NavigationBar","props","useState","isOpen","setIsOpen","history","useHistory","light","expand","onClick","replace","NavbarToggler","navbar","className","to","Layout","Fragment","Container","children","ReactDOM","render","StrictMode","Suspense","fallback","map","route","index","exact","from","document","getElementById"],"mappings":"sMAceA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,uCCMCQ,EAZiB,WAC9B,OACE,cAAC,IAAD,CACEC,KAAK,eACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,O,QCkBAC,EAlBS,CACpB,CACIC,KAAM,OACNC,KAAM,QACNC,UCXmB,WACzB,OAAO,cAACC,EAAA,EAAD,sBDYL,CACIH,KAAM,QACNC,KAAM,SACNC,UEjBoB,WAC1B,OAAO,yCFkBL,CACIF,KAAM,QACNC,KAAM,SACNC,UGtBoB,WAC1B,OAAO,0C,gFCSHE,EAAoBC,YAAOC,IAAPD,CAAH,gDAIjBE,EAAiBF,YAAOG,IAAPH,CAAH,0DAIdI,EAAgBJ,YAAOK,IAAPL,CAAH,sIAQbM,EAAeN,YAAOO,IAAPP,CAAH,mEAIZQ,EAAYR,YAAOS,IAAPT,CAAH,oDAmCAU,EA/BiB,SAACC,GAAW,IAAD,EACbC,oBAAS,GADI,mBAClCC,EADkC,KAC1BC,EAD0B,KAEnCC,EAAUC,cAQhB,OACE,eAACV,EAAD,CAAchB,MAAM,QAAQ2B,OAAK,EAACC,OAAO,KAAzC,UACE,cAACnB,EAAD,CAAmBoB,QANF,WACnBJ,EAAQK,QAAQ,UAKd,gBACA,cAACC,EAAA,EAAD,CAAeF,QATJ,kBAAML,GAAWD,MAU5B,cAACX,EAAD,CAAgBW,OAAQA,EAAQS,QAAM,EAAtC,SACE,eAACd,EAAD,CAAWe,UAAU,UAAUD,QAAM,EAArC,UACE,cAAClB,EAAD,UACE,cAAC,IAAD,CAASoB,GAAG,QAAZ,oBAEF,cAACpB,EAAD,UACE,cAAC,IAAD,CAASoB,GAAG,SAAZ,qBAEF,cAACpB,EAAD,UACE,cAAC,IAAD,CAASoB,GAAG,SAAZ,8BC9CGC,EATU,SAACd,GACxB,OACE,eAAC,IAAMe,SAAP,WACE,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,UAAYhB,EAAMiB,eCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAMC,SAAP,CAAgBC,SAAU7C,EAA1B,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,eAAC,IAAD,WACGM,EAAOwC,KAAI,SAACC,EAAOC,GAClB,OACE,cAAC,IAAD,CAEEC,OAAK,EACLzC,KAAMuC,EAAMvC,KACZC,UAAWsC,EAAMtC,WAHZsC,EAAMxC,SAOjB,cAAC,IAAD,CAAU2C,KAAK,IAAId,GAAG,qBAMhCe,SAASC,eAAe,SAM1B7D,M","file":"static/js/main.c5cda160.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nconst LoaderSpinner: React.FC = () => {\n  return (\n    <Loader\n      type=\"BallTriangle\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={100000} //3 secs\n    />\n  );\n};\n\nexport default LoaderSpinner;\n","import Home from \"../Pages/Home\";\nimport Blogs from \"../Pages/Blogs\";\nimport About from \"../Pages/About\";\n\ninterface Route {\n    name: string;\n    path: string;\n    component: React.FC;\n}\n\nconst Routes: Route[] = [\n    {\n        name: \"Home\",\n        path: \"/home\",\n        component: Home\n    },\n    {\n        name: \"About\",\n        path: \"/about\",\n        component: About\n    },\n    {\n        name: \"Blogs\",\n        path: \"/blogs\",\n        component: Blogs\n    }\n]\n\nexport default Routes;","import React from \"react\";\nimport { Button } from \"reactstrap\";\n\nconst Home: React.FC<{}> = () => {\n  return <Button>Click</Button>;\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst About: React.FC<{}> = () => {\n  return <h1>About</h1>;\n};\n\nexport default About;\n","import React from \"react\";\n\nconst Blogs: React.FC<{}> = () => {\n  return <h1>Blogs</h1>;\n};\n\nexport default Blogs;\n","import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n} from \"reactstrap\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst NavBarBrandStyled = styled(NavbarBrand)`\n  font-size: 3rem;\n`;\n\nconst CollapseStyled = styled(Collapse)`\n  justify-content: flex-end;\n`;\n\nconst NavItemStyled = styled(NavItem)`\n  padding: 0 1vw 0 1vw;\n\n  @media only screen and (max-width: 767px) {\n    padding: 1vw 0 1vw 0;\n  }\n`;\n\nconst NavbarStyled = styled(Navbar)`\n  background-color: white !important;\n`;\n\nconst NavStyled = styled(Nav)`\n  padding-right: 10vw;\n`;\n\nconst NavigationBar: React.FC = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const history = useHistory();\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const navigateHome = () => {\n    history.replace(\"/home\");\n  };\n\n  return (\n    <NavbarStyled color=\"light\" light expand=\"md\">\n      <NavBarBrandStyled onClick={navigateHome}>IM</NavBarBrandStyled>\n      <NavbarToggler onClick={toggle} />\n      <CollapseStyled isOpen={isOpen} navbar>\n        <NavStyled className=\"me-auto\" navbar>\n          <NavItemStyled>\n            <NavLink to=\"/home\">Home</NavLink>\n          </NavItemStyled>\n          <NavItemStyled>\n            <NavLink to=\"/about\">About</NavLink>\n          </NavItemStyled>\n          <NavItemStyled>\n            <NavLink to=\"/blogs\">Blogs</NavLink>\n          </NavItemStyled>\n        </NavStyled>\n      </CollapseStyled>\n    </NavbarStyled>\n  );\n};\n\nexport default NavigationBar;\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport NavigationBar from \"../Components/NavigationBar\";\n\nconst Layout: React.FC = (props) => {\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Container>{props.children}</Container>\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport LoaderSpinner from \"./Components/LoaderSpinner\";\nimport Routes from \"./Routes/RoutesConfig\";\nimport Layout from \"./Containers/Layout\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <React.Suspense fallback={LoaderSpinner}>\n      <HashRouter>\n        <Layout>\n          <Switch>\n            {Routes.map((route, index) => {\n              return (\n                <Route\n                  key={route.name}\n                  exact\n                  path={route.path}\n                  component={route.component}\n                />\n              );\n            })}\n            <Redirect from=\"/\" to=\"/home\" />\n          </Switch>\n        </Layout>\n      </HashRouter>\n    </React.Suspense>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}